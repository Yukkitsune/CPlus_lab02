#include <iostream> //Подключение библиотеки ввода-вывода
#include <cmath>//Подключение библиотеки математика
#include <iomanip>//Подключение библиотеки для установки точности знаков после запятой
using namespace std;//Используем пространство имён std

unsigned int factorial(unsigned int fact) // Функция, которая считает факториал числа
{
    if (fact == 0)
        return 1;
    return fact * factorial(fact - 1);
}
int main()//Главная функция программы
{
    setlocale(LC_ALL, "Russian");//Установка русского языка в консоли вывода
    /*Вводим вещественные переменные n - используется в формуле подсчёта, ans - сумма значений слагаемых формулы,
    eps - точность знаков после запятой, x - число, sin которого считает программа, summand - очередное слагаемое */
    double n=0, ans=0,x,summand;
    int eps, count = 0; //Точность и счетчик числа повторений цикла
    bool flagx = false,flageps = false; // Флаги для проверки на соответствие ограничению sin x и диапазону точности соответственно
    while (flageps == false) { // Проверка на соответствие диапазону точности
        cout << "Введите точность знаков после запятой в диапазоне от 2 до 6 (Например, 3): "; //Вводим точность
        cin >> eps;
        if (eps >= 2 && eps <= 6) { // Проверка на принадлежность eps диапазону
            flageps = true;        
        }
    }
    while (flagx == false) { // Проверка на соответствие ограничения sin x
        cout << "Введите x, не превышающий по модулю 1 (Например, 0.5435): "; //Вводим x
        cin >> x;
        if (fabs(x) <= 1) { // Проверка на принадлежность x диапазону sin x
            flagx = true;
        }
    }
    summand = x;//Присваиваем первому слагаемому значение переменной x
    while (fabs(summand) >= pow(10,-eps)) { // Пока модуль слагаемого >= точности цикл продолжается
        count++;// инкрементируем счетчик повторений цикла
        n++;//инкрементируем переменную n, с помощью которой считается формула
        summand = pow(-1, n - 1) * (pow(x, 2 * n - 1) / factorial(2 * n - 1));// присваиваем слагаемому значение формулы
        ans += summand;//Добавляем к сумме значение слагаемого
        //cout << "слагаемое = " << summand << " Ответ = " << ans << " Количество итераций = " << count << endl;
    }
    cout << fixed << setprecision(10);//Установка отображения фиксированного числа знаков числа после запятой
    cout << "Количество итераций: " << count << endl; // Вывод количества итераций
    cout << "Значение выражения: " << ans << endl; // Вывод значения выражения
    cout << "Значение встроенной функции sin x: " << sin(x) << endl;// Вывод значения встроенной функции sin x
    system("pause"); // Остановка окна консоли до действий пользователя
    return 0; // Возвращение значения 0 в функцию main
}
